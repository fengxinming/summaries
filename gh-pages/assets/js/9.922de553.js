(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{132:function(t,n,a){"use strict";a.r(n);var s=a(0),e=Object(s.a)({},(function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"css选择器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css选择器"}},[t._v("#")]),t._v(" CSS选择器")]),t._v(" "),a("h2",{attrs:{id:"选择器种类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#选择器种类"}},[t._v("#")]),t._v(" 选择器种类")]),t._v(" "),a("ul",[a("li",[t._v("id选择器 (#myid)")]),t._v(" "),a("li",[t._v("类选择器 (.myclassname)")]),t._v(" "),a("li",[t._v("标签选择器 (div, h1, p）")]),t._v(" "),a("li",[t._v("紧邻同胞选择器 h1 + p (选的是h1后紧跟的那个p)")]),t._v(" "),a("li",[t._v("一般同胞选择器 h1 ~ p (选择所有跟在h1后的p) [css3]")]),t._v(" "),a("li",[t._v("子选择器 (ul > li)")]),t._v(" "),a("li",[t._v("后代选择器 (li a)")]),t._v(" "),a("li",[t._v("通配符选择器 ( * )")]),t._v(" "),a("li",[t._v('属性选择器 (a[rel = "external"])')]),t._v(" "),a("li",[t._v("伪类选择器 (a:hover, li:nth-child)")])]),t._v(" "),a("h2",{attrs:{id:"伪元素和伪类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#伪元素和伪类"}},[t._v("#")]),t._v(" 伪元素和伪类")]),t._v(" "),a("h3",{attrs:{id:"所有伪元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#所有伪元素"}},[t._v("#")]),t._v(" 所有伪元素")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("::after\n::before\n::first-letter\n::first-line\n::selection\n")])])]),a("h3",{attrs:{id:"伪类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#伪类"}},[t._v("#")]),t._v(" 伪类")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(":active, :hover, :visited\n:any\n:any-link\n:checked\n:default\n:defined\n:dir()\n:disabled\n:empty\n:enabled\n:first\n:first-child\n:first-of-type\n:fullscreen\n:focus\n:focus-visible\n:host\n:host()\n:host-context()\n:indeterminate\n:in-range\n:invalid\n:lang()\n:last-child\n:last-of-type\n:left\n:link\n:not()\n:nth-child()\n:nth-last-child()\n:nth-last-of-type()\n:nth-of-type()\n:only-child\n:only-of-type\n:optional\n:out-of-range\n:read-only\n:read-write\n:required\n:right\n:root\n:scope\n:target\n:valid\n")])])]),a("blockquote",[a("p",[t._v("匹配 section 孙子元素，而非子元素的 a 标签都会被选中")])]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("section * a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1.3em"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);n.default=e.exports}}]);