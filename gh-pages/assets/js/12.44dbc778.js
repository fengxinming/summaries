(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{10:function(t,e,r){"use strict";function s(t,e,r,s,o,n,i,a){var _,c="function"==typeof t?t.options:t;if(e&&(c.render=e,c.staticRenderFns=r,c._compiled=!0),s&&(c.functional=!0),n&&(c._scopeId="data-v-"+n),i?(_=function(t){(t=t||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(t=__VUE_SSR_CONTEXT__),o&&o.call(this,t),t&&t._registeredComponents&&t._registeredComponents.add(i)},c._ssrRegister=_):o&&(_=a?function(){o.call(this,this.$root.$options.shadowRoot)}:o),_)if(c.functional){c._injectStyles=_;var v=c.render;c.render=function(t,e){return _.call(e),v(t,e)}}else{var l=c.beforeCreate;c.beforeCreate=l?[].concat(l,_):[_]}return{exports:t,options:c}}r.d(e,"a",(function(){return s}))},135:function(t,e,r){"use strict";r.r(e);var s=r(10),o=Object(s.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"csrf"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#csrf"}},[t._v("#")]),t._v(" CSRF")]),t._v(" "),r("h2",{attrs:{id:"csrf简介"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#csrf简介"}},[t._v("#")]),t._v(" CSRF简介")]),t._v(" "),r("p",[t._v("跨站请求伪造(Cross-Site Request Forgery, CSRF)，恶意网站通过脚本向当前用户浏览器打开的其它页面的 URL 发起恶意请求，由于同一浏览器进程下 Cookie 可见性，导致用户身份被盗用，完成恶意网站脚本中指定的操作")]),t._v(" "),r("h2",{attrs:{id:"csrf攻击原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#csrf攻击原理"}},[t._v("#")]),t._v(" CSRF攻击原理")]),t._v(" "),r("ol",[r("li",[t._v("首先用户C浏览并登录了受信任站点A")]),t._v(" "),r("li",[t._v("登录信息验证通过以后，站点A会在返回给浏览器的信息中带上已登录的cookie，cookie信息会在浏览器端保存一定时间（根据服务端设置而定）")]),t._v(" "),r("li",[t._v("完成这一步以后，用户在没有登出（清除站点A的cookie）站点A的情况下，访问恶意站点B")]),t._v(" "),r("li",[t._v("这时恶意站点B的某个页面向站点A发起请求，而这个请求会带上浏览器端所保存的站点A的cookie")]),t._v(" "),r("li",[t._v("站点A根据请求所带的cookie，判断此请求为用户C所发送的")])]),t._v(" "),r("h2",{attrs:{id:"csrf防御方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#csrf防御方法"}},[t._v("#")]),t._v(" CSRF防御方法")]),t._v(" "),r("ul",[r("li",[t._v("验证 HTTP Referer 字段")]),t._v(" "),r("li",[t._v("在请求地址中添加 token 并验证")]),t._v(" "),r("li",[t._v("在 HTTP 头中自定义属性并验证")])])])}),[],!1,null,null,null);e.default=o.exports}}]);