(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{390:function(t,r,s){"use strict";s.r(r);var e=s(45),a=Object(e.a)({},(function(){var t=this,r=t.$createElement,s=t._self._c||r;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"csrf"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#csrf"}},[t._v("#")]),t._v(" CSRF")]),t._v(" "),s("h2",{attrs:{id:"csrf简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#csrf简介"}},[t._v("#")]),t._v(" CSRF简介")]),t._v(" "),s("p",[t._v("跨站请求伪造(Cross-Site Request Forgery, CSRF)，恶意网站通过脚本向当前用户浏览器打开的其它页面的 URL 发起恶意请求，由于同一浏览器进程下 Cookie 可见性，导致用户身份被盗用，完成恶意网站脚本中指定的操作")]),t._v(" "),s("h2",{attrs:{id:"csrf攻击原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#csrf攻击原理"}},[t._v("#")]),t._v(" CSRF攻击原理")]),t._v(" "),s("ol",[s("li",[t._v("首先用户C浏览并登录了受信任站点A")]),t._v(" "),s("li",[t._v("登录信息验证通过以后，站点A会在返回给浏览器的信息中带上已登录的cookie，cookie信息会在浏览器端保存一定时间（根据服务端设置而定）")]),t._v(" "),s("li",[t._v("完成这一步以后，用户在没有登出（清除站点A的cookie）站点A的情况下，访问恶意站点B")]),t._v(" "),s("li",[t._v("这时恶意站点B的某个页面向站点A发起请求，而这个请求会带上浏览器端所保存的站点A的cookie")]),t._v(" "),s("li",[t._v("站点A根据请求所带的cookie，判断此请求为用户C所发送的")])]),t._v(" "),s("h2",{attrs:{id:"csrf防御方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#csrf防御方法"}},[t._v("#")]),t._v(" CSRF防御方法")]),t._v(" "),s("ul",[s("li",[t._v("验证 HTTP Referer 字段")]),t._v(" "),s("li",[t._v("在请求地址中添加 token 并验证")]),t._v(" "),s("li",[t._v("在 HTTP 头中自定义属性并验证")])])])}),[],!1,null,null,null);r.default=a.exports}}]);