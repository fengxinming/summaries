(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{378:function(t,a,s){"use strict";s.r(a);var r=s(45),n=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"web基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#web基础"}},[t._v("#")]),t._v(" Web基础")]),t._v(" "),s("h2",{attrs:{id:"浏览器解析网站的过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器解析网站的过程"}},[t._v("#")]),t._v(" 浏览器解析网站的过程")]),t._v(" "),s("ul",[s("li",[t._v("DNS域名解析\n"),s("ul",[s("li",[t._v("在浏览器的缓存中查找(chrome://net-internals/#dns)")]),t._v(" "),s("li",[t._v("在系统缓存及本地的hosts文件中查找")]),t._v(" "),s("li",[t._v("在本地路由器缓存中查找")]),t._v(" "),s("li",[t._v("发送请求至网络供应商的DNS服务器上查找")])])]),t._v(" "),s("li",[s("a",{attrs:{href:"#HTTP%E7%9A%84%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B"}},[t._v("建立TCP连接发送三次握手")])]),t._v(" "),s("li",[t._v("发送HTTP请求")]),t._v(" "),s("li",[t._v("服务器处理请求并返回HTTP报文")]),t._v(" "),s("li",[t._v("浏览器显示页面")]),t._v(" "),s("li",[t._v("断开TCP连接")])]),t._v(" "),s("h2",{attrs:{id:"http的三次握手"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http的三次握手"}},[t._v("#")]),t._v(" HTTP的三次握手")]),t._v(" "),s("ol",[s("li",[t._v("第一次握手：客户端发送一个带SYN的TCP报文到服务器，表示客户端想要和服务器端建立连接。")]),t._v(" "),s("li",[t._v("第二次握手：服务器端接收到客户端的请求，返回客户端报文，这个报文带有SYN和ACK确认标示，访问客户端是否准备好。")]),t._v(" "),s("li",[t._v("第三次握手：客户端再次响应服务端一个ACK确认，表示我已经准备好了。")])]),t._v(" "),s("h2",{attrs:{id:"http的四次挥手"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http的四次挥手"}},[t._v("#")]),t._v(" HTTP的四次挥手")]),t._v(" "),s("ol",[s("li",[t._v("第一次挥手：TCP发送一个FIN(结束)，用来关闭客户端到服务器端的连接。")]),t._v(" "),s("li",[t._v("第二次挥手：服务器端收到这个FIN后发回一个ACK确认标示，确认收到。")]),t._v(" "),s("li",[t._v("第三次挥手：服务器端发送一个FIN到客户端，服务器端关闭客户端的连接。")]),t._v(" "),s("li",[t._v("第四次挥手：客户端发送ACK报文确认，这样关闭完成。")])]),t._v(" "),s("h2",{attrs:{id:"https连接过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#https连接过程"}},[t._v("#")]),t._v(" HTTPS连接过程")]),t._v(" "),s("p",[s("img",{attrs:{src:"/summaries/https.png",alt:"https"}})]),t._v(" "),s("h2",{attrs:{id:"理解js中的堆和栈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#理解js中的堆和栈"}},[t._v("#")]),t._v(" 理解JS中的堆和栈")]),t._v(" "),s("p",[t._v("javascript的基本类型就5种：Undefined、Null、Boolean、Number和String，它们都是直接按值存储在栈中的，每种类型的数据占用的内存空间的大小是确定的，并由系统自动分配和自动释放。这样带来的好处就是，内存可以及时得到回收，相对于堆来说，更加容易管理内存空间。")]),t._v(" "),s("p",[t._v("javascript中其他类型的数据被称为引用类型的数据：如对象(Object)、数组(Array)、函数(Function)、Symbol，它们是通过拷贝和new出来的，这样的数据存储于堆中。其实，说存储于堆中，也不太准确，因为，引用类型的数据的地址指针是存储于栈中的，当我们想要访问引用类型的值的时候，需要先从栈中获得对象的地址指针，然后，在通过地址指针找到堆中的所需要的数据。")]),t._v(" "),s("p",[t._v("栈，线性结构，后进先出，便于管理。堆，一个混沌，杂乱无章，方便存储和开辟内存空间")]),t._v(" "),s("h3",{attrs:{id:"栈-stack"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#栈-stack"}},[t._v("#")]),t._v(" 栈(stack)")]),t._v(" "),s("p",[t._v("栈会自动分配内存空间，会自动释放，存放基本类型，简单的数据段，占据固定大小的空间。（基本类型：String，Number，Boolean，Null，Undefined）")]),t._v(" "),s("h3",{attrs:{id:"堆-heap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#堆-heap"}},[t._v("#")]),t._v(" 堆(heap)")]),t._v(" "),s("p",[t._v("动态分配的内存，大小不定也不会自动释放，存放引用类型，指那些可能由多个值构成的对象，保存在堆内存中，包含引用类型的变量，实际上保存的不是变量本身，而是指向该对象的指针。（引用类型：Function，Array，Object）")]),t._v(" "),s("h3",{attrs:{id:"栈和堆的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#栈和堆的区别"}},[t._v("#")]),t._v(" 栈和堆的区别")]),t._v(" "),s("ul",[s("li",[t._v("栈：所有在方法中定义的变量都是放在栈内存中，随着方法的执行结束，这个方法的内存栈也自然销毁\n"),s("ul",[s("li",[t._v("优点：存取速度比堆快，仅次于直接位于CPU中的寄存器，数据可以共享")]),t._v(" "),s("li",[t._v("缺点：存在栈中的数据大小与生存期必须是确定的，缺乏灵活性")])])]),t._v(" "),s("li",[t._v("堆：堆内存中的对象不会随方法的结束而销毁，即使方法结束后，这个对象还可能被另一个引用变量所引用(参数传递)。创建对象是为了反复利用，这个对象将被保存到运行时数据区")])]),t._v(" "),s("h3",{attrs:{id:"栈和堆的溢出"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#栈和堆的溢出"}},[t._v("#")]),t._v(" 栈和堆的溢出")]),t._v(" "),s("ul",[s("li",[t._v("栈：可以递归调用方法，这样随着栈深度的增加，JVM维持着一条长长的方法调用轨迹，知道内存不够分配，产生栈溢出")]),t._v(" "),s("li",[t._v("堆：循环创建对象，通俗点就是不断的new 一个对象")])]),t._v(" "),s("h3",{attrs:{id:"传值和传址的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#传值和传址的区别"}},[t._v("#")]),t._v(" 传值和传址的区别")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("基本类型和引用类型的区别")])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr1 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1,2,5,8")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//5")]),t._v("\narr2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("99")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \nstr1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1,2,5,8,99")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//5")]),t._v("\n")])])]),s("p",[t._v("上方例子得知，当我改变arr2中的数据时，arr1中数据也发生了变化，当改变str1的数据值时，arr1却没有发生改变。为什么？这就是传值与传址的区别。")]),t._v(" "),s("p",[t._v("因为arr1是数组，属于引用类型，所以它赋予给arr2的时候传的是栈中的地址（相当于新建了一个不同名“指针”），而不是堆内存中的对象的值。str1得到的是一个基本类型的赋值，因此，str1仅仅是从arr1堆内存中获取了一个数值，并直接保存在栈中。arr1、arr2都指向同一块堆内存，arr2修改的堆内存的时候，也就会影响到arr1，str1是直接在栈中修改，并且不能影响到arr1堆内存中的数据。")]),t._v(" "),s("h2",{attrs:{id:"什么是闭包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是闭包"}},[t._v("#")]),t._v(" 什么是闭包")]),t._v(" "),s("p",[t._v("闭包是指有权访问另一个函数作用域中的变量的函数")]),t._v(" "),s("h3",{attrs:{id:"作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作用"}},[t._v("#")]),t._v(" 作用")]),t._v(" "),s("ul",[s("li",[t._v("缓存对象，可以让多个函数同时作用于一个对象；")]),t._v(" "),s("li",[t._v("变量私有化；")]),t._v(" "),s("li",[t._v("在模块化开发中避免被全局污染。")])]),t._v(" "),s("h3",{attrs:{id:"场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#场景"}},[t._v("#")]),t._v(" 场景")]),t._v(" "),s("ul",[s("li",[t._v("防抖;")]),t._v(" "),s("li",[t._v("节流;")]),t._v(" "),s("li",[t._v("柯里化；")]),t._v(" "),s("li",[t._v("setTimout回调中读取正确的值。")])])])}),[],!1,null,null,null);a.default=n.exports}}]);